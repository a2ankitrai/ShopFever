package com.shopfever.model.hbm;

// Generated Sep 7, 2014 11:54:10 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SfCustomer generated by hbm2java
 */
@Entity
@Table(name = "sf_customer", catalog = "shop_fever")
public class SfCustomer implements java.io.Serializable {

	private Integer customerId;
	private String userName;
	private String password;
	private String firstName;
	private String middleName;
	private String lastName;
	private String mobileNo;
	private String emailId;
	private byte[] photograph;
	private String activeUser;
	private String userRole;
	private Set<SfCustomerAddress> sfCustomerAddresses = new HashSet<SfCustomerAddress>(
			0);
	private Set<SfOrder> sfOrders = new HashSet<SfOrder>(0);

	public SfCustomer() {
	}

	public SfCustomer(String userName, String password, String firstName,
			String lastName, String mobileNo, String emailId) {
		this.userName = userName;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.mobileNo = mobileNo;
		this.emailId = emailId;
	}

	public SfCustomer(String userName, String password, String firstName,
			String middleName, String lastName, String mobileNo,
			String emailId, byte[] photograph, String activeUser,
			String userRole, Set<SfCustomerAddress> sfCustomerAddresses,
			Set<SfOrder> sfOrders) {
		this.userName = userName;
		this.password = password;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.mobileNo = mobileNo;
		this.emailId = emailId;
		this.photograph = photograph;
		this.activeUser = activeUser;
		this.userRole = userRole;
		this.sfCustomerAddresses = sfCustomerAddresses;
		this.sfOrders = sfOrders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "customer_id", unique = true, nullable = false)
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@Column(name = "user_name", nullable = false, length = 45)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "first_name", nullable = false, length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "middle_name", length = 45)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "last_name", nullable = false, length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "mobile_no", nullable = false, length = 20)
	public String getMobileNo() {
		return this.mobileNo;
	}

	public void setMobileNo(String mobileNo) {
		this.mobileNo = mobileNo;
	}

	@Column(name = "email_id", nullable = false, length = 100)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "photograph")
	public byte[] getPhotograph() {
		return this.photograph;
	}

	public void setPhotograph(byte[] photograph) {
		this.photograph = photograph;
	}

	@Column(name = "active_user", length = 5)
	public String getActiveUser() {
		return this.activeUser;
	}

	public void setActiveUser(String activeUser) {
		this.activeUser = activeUser;
	}

	@Column(name = "user_role", length = 45)
	public String getUserRole() {
		return this.userRole;
	}

	public void setUserRole(String userRole) {
		this.userRole = userRole;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sfCustomer")
	public Set<SfCustomerAddress> getSfCustomerAddresses() {
		return this.sfCustomerAddresses;
	}

	public void setSfCustomerAddresses(
			Set<SfCustomerAddress> sfCustomerAddresses) {
		this.sfCustomerAddresses = sfCustomerAddresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sfCustomer")
	public Set<SfOrder> getSfOrders() {
		return this.sfOrders;
	}

	public void setSfOrders(Set<SfOrder> sfOrders) {
		this.sfOrders = sfOrders;
	}

}
